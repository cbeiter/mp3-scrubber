<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Raize.CodeSiteLogging</name>
    </assembly>
    <members>
        <member name="T:Raize.CodeSiteLogging.CodeSiteConnection">
            <summary>
            This base class provides the common functionality needed for connecting
            CodeSiteLogger instances to a CodeSite Dispatcher.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConnection.Close">
            <summary>
            Use this method to close the connection to the Dispatcher.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConnection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, 
            or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConnection.Dispose(System.Boolean)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConnection.Finalize">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConnection.CanDisconnect(System.Boolean)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConnection.DispatcherIsRunning">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConnection.CloseDispatcher">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConnection.SendMessageToDispatcher(Raize.CodeSiteLogging.CodeSiteMessage)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConnection.SendCodeSiteMessage(Raize.CodeSiteLogging.CodeSiteLogger,System.String@,System.DateTime@,Raize.CodeSiteLogging.CodeSiteMessage)">
            <summary>
            Core method that establishes a connection between a CodeSiteLogger
            instance and a CodeSite Dispatcher, and sends the specified CodeSite
            message to the CodeSite Dispatcher in order to be dispatched to its
            final destination.  This method is invoked by the CodeSiteLogger class.
            </summary>
            <param name="logger">The active CodeSiteLogger instance.</param>
            <param name="dispatchID">The dispatch ID.</param>
            <param name="dispatchIDDate">The date dispatchID was generated.</param>
            <param name="msg">The full CodeSiteMessage instance.</param>
            <returns></returns>
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteCopyDataConnection">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteCopyDataConnection.#ctor">
               
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteCopyDataConnection.GetDispatcherWindow">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteCopyDataConnection.StartDispatcher">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteCopyDataConnection.DispatcherIsRunning">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteCopyDataConnection.CloseDispatcher">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteCopyDataConnection.SendMessageToDispatcher(Raize.CodeSiteLogging.CodeSiteMessage)">
            
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteTcpConnection">
            <summary>
            Use this class to establish a connection between a CodeSiteLogger instance
            and a CodeSite Dispatcher using TCP.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTcpConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSiteTcpConnection"/> class.
            Initializes Host to default Host (i.e. localhost) and Port to the default TCP port.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTcpConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSiteTcpConnection"/> class.
            Sets the Host to the specified host parameter, and the Port to the default
            TCP port.
            </summary>
            <param name="host">The host name.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTcpConnection.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSiteTcpConnection"/> class.
            Sets the Host and Port properties to the specified host and port parameters.
            </summary>
            <param name="host">The host name.</param>
            <param name="port">The port number.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTcpConnection.Dispose(System.Boolean)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTcpConnection.CanDisconnect(System.Boolean)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTcpConnection.ConnectToDispatcher">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTcpConnection.WriteInteger(System.Int32)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTcpConnection.WriteString(System.String,System.Int32)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTcpConnection.WriteString(System.String)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTcpConnection.SendMessageToDispatcher(Raize.CodeSiteLogging.CodeSiteMessage)">
            
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteTcpClient">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTcpClient.#ctor(System.String,System.Int32)">
            
        </member>
        <member name="T:Raize.CodeSiteLogging.AliasDestination">
            <summary>
            This class is used to manage the details that define an Alias
            destination.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.BaseDestination">
            <summary>
            This abstract base class is used to define common functionality for
            the different destinations supported by CodeSite.
            </summary>
            
        </member>
        <member name="F:Raize.CodeSiteLogging.BaseDestination.fDestName">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.BaseDestination.#ctor(Raize.CodeSiteLogging.CodeSiteDestination)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.BaseDestination.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.BaseDestination.Changed">
            <summary>
            Property accessors in descendant classes call this method to 
            indicate that the destination instance has been changed.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.BaseDestination.Clone(Raize.CodeSiteLogging.CodeSiteDestination)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.BaseDestination.InvalidDestination(System.String)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.BaseDestination.InvalidDestinationOption(System.String)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.BaseDestination.Validate">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.BaseDestination.DestName">
            <summary>
            ReadOnly property that returns the name of the destination. 
            Used by CodeSite transport system for generating destination 
            specifications.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.BaseDestination.Active">
            <summary>
            Use this property to activate a particular destination type in
            a <see cref="T:CodeSiteDestination"/> instance.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.AliasDestination.#ctor(Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            Initializes a new instance of the <see cref="T:AliasDestination"/> class.
            Initialize the DestName property to "Alias".
            </summary>
            <param name="owner">The CodeSiteDestination owner.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.AliasDestination.ToString">
            <summary>
            Returns the Alias details in a string format used by the CodeSite 
            transport system.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.AliasDestination.Clear">
            <summary>
            Resets the properties of this instance to their default values.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.AliasDestination.Clone(Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            Creates a copy of this instance.
            </summary>
            <param name="owner">The CodeSiteDestination owner.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.AliasDestination.Validate">
            <summary>
            Ensures that if Active is true, an alias Name is specified.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.AliasDestination.Name">
            <summary>
            Use this property to specify the Alias name.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.InvalidDestinationException">
            <summary>
            Indicates that the details of the CodeSite destination are 
            missing or invalid.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.InvalidDestinationException.#ctor">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.InvalidDestinationException.#ctor(System.String)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.InvalidDestinationException.#ctor(System.String,System.Exception)">
            
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteDestination">
            <summary>
            This class is used to specify where (and how) CodeSite messages
            are routed to their final destination.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteDestination.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSiteDestination"/> class.
            Creates embedded destination sub-type properties (e.g. Viewer, LogFile,
            Tcp, Udp, Http, and Alias).
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteDestination.ToString">
            <summary>
            Combines the string representations of all destination sub-types
            to create a string formatted for use by the CodeSite 
            transport system.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteDestination.Clear">
            <summary>
            Clears all destination sub-types.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteDestination.BeginUpdate">
            <summary>
            Use this method (along with EndUpdate) to change properties of
            multiple destination sub-types at one time without causing this
            instance to update its details.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteDestination.EndUpdate">
            <summary>
            Use this method (along with BeginUpdate) to change properties of
            multiple destination sub-types at one time without causing this
            instance to update its details.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteDestination.Changed">
            <summary>
            This method is called when properties of destination sub-types
            are modified and results in a new internal destination code
            being generated for use by the CodeSite transport system.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteDestination.Validate">
            <summary>
            Ensures that all destination sub-types are valid.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteDestination.Clone">
            <summary>
            Creates a copy of this instance including all of the destination
            sub-type properties.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteDestination.Viewer">
            <summary>
            Use this property to specify the details for sending 
            CodeSite messages to the CodeSite Live Viewer.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteDestination.LogFile">
            <summary>
            Use this property to specify the details for sending 
            CodeSite messages to a log file.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteDestination.TCP">
            <summary>
            Use this property to specify the details for sending 
            CodeSite messages to a remote CodeSite Dispatcher using TCP.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteDestination.UDP">
            <summary>
            Use this property to specify the details for sending 
            CodeSite messages to a remote CodeSite Dispatcher using UDP.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteDestination.HTTP">
            <summary>
            Use this property to specify the details for sending 
            CodeSite messages to a web server application using HTTP.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteDestination.Alias">
            <summary>
            Use this property to specify the details for sending 
            CodeSite messages to a destination represented by an alias name.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteDestination.Additional">
            <summary>
            Use this property to specify the additional destination details.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteDestination.DestinationCode">
            <summary>
            ReadOnly property that returns a numeric code representing the
            various destination settings. This code is used to determine if
            the destination has changed.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteDestinationList">
            <summary>
            Base class used to manage a list of 
            <see cref="T:Raize.CodeSiteLogging.CodeSiteDestination"/> instances.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteDestinationList.Add(System.Object,System.Object)">
            <summary>
            Overridden Add method to ensure that only <see cref="T:Raize.CodeSiteLogging.CodeSiteDestination"/>
            instances are added to the list.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">Must be a CodeSiteDestination instance.</param>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteDestinationList.Item(System.String)">
            <summary>
            Indexer property for this list of CodeSiteDestinations.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.HttpDestination">
            <summary>
            This class is used to manage the details that define an HTTP
            destination.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.HttpDestination.#ctor(Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            Initializes a new instance of the <see cref="T:HttpDestination"/> class.
            Initialize the DestName property to "HTTP".
            </summary>
            <param name="owner">The CodeSiteDestination owner.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.HttpDestination.ToString">
            <summary>
            Returns the HTTP details in a string format used by the CodeSite 
            transport system.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.HttpDestination.Clear">
            <summary>
            Resets the properties of this instance to their default values.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.HttpDestination.Clone(Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            Creates a copy of this instance.
            </summary>
            <param name="owner">The CodeSiteDestination owner.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.HttpDestination.Validate">
            <summary>
            Ensures that if Active is true, a URL and Alias are specified.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.HttpDestination.URL">
            <summary>
            Use this property to specify the URL to the CS3CGI.exe or CS3ISAPI.dll
            located on a web server.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.HttpDestination.Alias">
            <summary>
            Use this property to specify the Alias to be used to acquire
            the destination details from the web server.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.HttpDestination.ProxyServer">
            <summary>
            Use this property to specify a ProxyServer.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.HttpDestination.ProxyPort">
            <summary>
            Use this property to specify a ProxyPort.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.HttpDestination.ProxyUsername">
            <summary>
            Use this property to specify a ProxyUsername.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.HttpDestination.ProxyPassword">
            <summary>
            Use this property to specify a ProxyPassword.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.LogFileDestination">
            <summary>
            This class is used to manage the details that define a LogFile 
            destination.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.LogFileDestination.#ctor(Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            Initializes a new instance of the <see cref="T:LogFileDestination"/> class.
            Initialize the DestName property to "File" and LogByDateFormat
            to "yyyymmdd".
            </summary>
            <param name="owner">The CodeSiteDestination owner.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.LogFileDestination.ToString">
            <summary>
            Returns the LogFile details in a string format used by the CodeSite 
            transport system.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.LogFileDestination.IncludeTrailingPathDelimiter(System.String)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.LogFileDestination.ExpandFilePath(System.String)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.LogFileDestination.Clear">
            <summary>
            Resets the properties of this instance to their default values.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.LogFileDestination.Clone(Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            Creates a copy of this instance.
            </summary>
            <param name="owner">The CodeSiteDestination owner.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.LogFileDestination.Validate">
            <summary>
            Ensures that if Active is true, a FileName is specified.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.LogFileDestination.FilePath">
            <summary>
            Use this property to specify the path to the log file. May
            be a symbolic name such as $(MyDocs).
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.LogFileDestination.FileName">
            <summary>
            Use this property to specify the name of the CodeSite log file.
            (A ".csl" file extension is used by default.)
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.LogFileDestination.MaxParts">
            <summary>
            Use this property to specify the maximum number of file parts.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.LogFileDestination.MaxSize">
            <summary>
            Use to limit the size of each log file part.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.LogFileDestination.LogByDate">
            <summary>
            Use to instruct the Dispatcher to separate log files based on date.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.LogFileDestination.LogByDateFormat">
            <summary>
            Use this property to change the date format used when 
            creating date-separated log files.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.NetworkDestination">
            <summary>
            This class is use to manage the details that define an Network
            destination (i.e. TCP or UDP).
            </summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.NetworkDestination.fHost">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.NetworkDestination.fPort">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.NetworkDestination.fRemoteDestinationString">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.NetworkDestination.#ctor(Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            Initializes a new instance of the <see cref="T:NetworkDestination"/> class.
            Initialize the DestName property to "Network". This class is not used
            directly. Use TcpDestination or UdpDestination.
            </summary>
            <param name="owner">The CodeSiteDestination owner.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.NetworkDestination.ToString">
            <summary>
            Returns the Network (TCP/UDP) details in a string format used by 
            the CodeSite transport system.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.NetworkDestination.Clear">
            <summary>
            Resets the properties of this instance to their default values.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.NetworkDestination.Validate">
            <summary>
            Ensures that if Active is true, a Host is specified.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.NetworkDestination.Host">
            <summary>
            Use this property to specify the host name for the remote machine
            running the CodeSite Dispatcher.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.NetworkDestination.Port">
            <summary>
            Use this property to specify the port number the remote CodeSite
            Dispatcher is listening on for remote CodeSite messages.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.NetworkDestination.RemoteDestinationString">
            <summary>
            Use this property to specify where the remote CodeSite Dispatcher
            will route messages that it receives from CodeSiteLogger instances
            using this destination.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.TcpDestination">
            <summary>
            This class is used to manage the details that define an Tcp
            destination.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.TcpDestination.#ctor(Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            Initializes a new instance of the <see cref="T:AliasDestination"/> class.
            Initialize the DestName property to "TCP".
            </summary>
            <param name="owner">The CodeSiteDestination owner.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.TcpDestination.Clear">
            <summary>
            Resets the properties of this instance to their default values.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.TcpDestination.Clone(Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            Creates a copy of this instance.
            </summary>
            <param name="owner">The CodeSiteDestination owner.</param>
        </member>
        <member name="T:Raize.CodeSiteLogging.UdpDestination">
            <summary>
            This class is used to manage the details that define an Udp
            destination.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.UdpDestination.#ctor(Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            Initializes a new instance of the <see cref="T:AliasDestination"/> class.
            Initialize the DestName property to "UDP".
            </summary>
            <param name="owner">The CodeSiteDestination owner.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.UdpDestination.Clear">
            <summary>
            Resets the properties of this instance to their default values.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.UdpDestination.Clone(Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            Creates a copy of this instance.
            </summary>
            <param name="owner">The CodeSiteDestination owner.</param>
        </member>
        <member name="T:Raize.CodeSiteLogging.ViewerDestination">
            <summary>
            This class is used to manage the details that define a Viewer
            destination.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.ViewerDestination.#ctor(Raize.CodeSiteLogging.CodeSiteDestination)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.ViewerDestination.ToString">
            <summary>
            Returns the Viewer details in a string format used by the CodeSite 
            transport system.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.ViewerDestination.Clone(Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            Creates a copy of this instance.
            </summary>
            <param name="owner">The CodeSiteDestination owner.</param>
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteSerializer">
            <summary>
            Use this class to serialize a CodeSiteMessage instance into
            an XML format that can be transported to the CodeSite Dispatcher.
            </summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteSerializer.UnicodeXmlMessageFormat">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteSerializer.UTF8XmlMessageFormat">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteSerializer.Serialize(Raize.CodeSiteLogging.CodeSiteMessage)">
            <summary>
            Serializes the specified CodeSiteMessage instance.
            </summary>
            <param name="msg">The <c>CodeSiteMessage</c> to serialize.</param>
            <returns>The serialized data.</returns>
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteInspectorType">
            <summary>
            Use this enum to specify the inspector to be used when displaying
            custom data.
            </summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteInspectorType.StockText">
            <summary>Use stock text inspector.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteInspectorType.StockProperties">
            <summary>Use stock properties (name=value) inspector.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteInspectorType.StockTable">
            <summary>Use stock table inspector.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteInspectorType.StockHierarchy">
            <summary>Use stock hierarchy inspector.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteInspectorType.Custom">
            <summary>Use custom inspector.</summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.ICodeSiteCustomData">
            <summary>
            Implement the ICodeSiteCustomData interface on a class that requires
            sending custom formatted data as a CodeSite message.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.ICodeSiteCustomData.GetFormattedData">
            <summary>
            Implement this method to evaluate and format internal object
            data into a format to be sent as details in a CodeSite message.
            </summary>
            <returns>Formatted data in a <c>StringBuilder</c> instance.</returns>
        </member>
        <member name="M:Raize.CodeSiteLogging.ICodeSiteCustomData.InspectorType">
            <summary>
            Implement this method to specify which type of inspector will
            be used to inspect the formatted data in the CodeSite Viewer.
            </summary>
            <returns><c>CodeSiteInspectorType</c> value.</returns>
        </member>
        <member name="M:Raize.CodeSiteLogging.ICodeSiteCustomData.MsgType">
            <summary>
            Implement this method to specify the message type which will
            be used to bind this custom data with an inspector.
            </summary>
            <returns>Integer value identifying type of message.</returns>
        </member>
        <member name="M:Raize.CodeSiteLogging.ICodeSiteCustomData.TypeName">
            <summary>
            Implement this method to specify a logical "type" name for
            the custom data.
            </summary>
            <returns>String value representing logical "type" name.</returns>
        </member>
        <member name="T:Raize.CodeSiteLogging.StackTraceBuilder">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.StackTraceBuilder.#ctor(System.Diagnostics.StackTrace)">
            
        </member>
        <member name="P:Raize.CodeSiteLogging.StackTraceBuilder.Trace">
            
        </member>
        <member name="T:Raize.CodeSiteLogging.Utility">
            <summary>
            This class provides several static methods for capturing
            detailed information for CodeSite.
            </summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.CSRegKey">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.CSRegKeyWow64">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.CSPoliciesRegKey">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.DispatcherFormCaption">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.DispatcherFormClass">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.DispatcherExeName">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.Utility.GetDispatcherFileName">
            <summary>
            Returns the full file name of the CodeSite Dispatcher.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.Utility.WindowHandleDetails(System.IntPtr)">
            <summary>
            Evaluates the specified window <c>handle</c> and extracts various
            details about the window including style values, extended styles, etc.
            </summary>
            <param name="handle">The window handle.</param>
            <returns>StringBuilder instance containing details.</returns>
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.HexChars">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.Utility.BinToHex(System.Byte[])">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.Utility.MemoryStatus">
            <summary>
            Utilizes the ManagementObjectSearcher to retrieve memory statistics.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.Utility.SystemInfo">
            <summary>
            Uses the Environment class to capture various attributes of the
            operating system.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.Utility.HexViewFromStream(System.IO.Stream)">
            <summary>
            Returns a hex representation of the contents of the specified
            stream.
            </summary>
            <param name="strm">The stream to convert to hex.</param>
            <returns>A StringBuilder instance.</returns>
        </member>
        <member name="M:Raize.CodeSiteLogging.Utility.TextFromStream(System.IO.Stream)">
            <summary>
            Returns a text representation of the contents of the specified
            stream.
            </summary>
            <param name="strm">The stream to convert to hex.</param>
            <returns>A StringBuilder instance.</returns>
        </member>
        <member name="M:Raize.CodeSiteLogging.Utility.CaptureScreenShot(System.IntPtr,System.Drawing.Bitmap@)">
            <summary>
            Captures the screen image of the specified window indentified
            by <c>handle</c>. The bitmap image of the screen shot is 
            placed in the <c>bmp</c> parameter.
            </summary>
            <param name="handle">The window handle.</param>
            <param name="bmp">The bitmap containing the screen shot.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.Utility.ControlsHierarchy(System.Windows.Forms.Control)">
            <summary>
            Traverses the Controls collection of the specified ctrl parameter and records
            the name and type of each child control. The Controls collections of child
            controls are also traversed and recorded.
            </summary>
            <param name="ctrl">The WinForms control to inspect.</param>
            <returns>StringBuilder instance of child control hierachy.</returns>
        </member>
        <member name="M:Raize.CodeSiteLogging.Utility.ParentsHierarchy(System.Windows.Forms.Control)">
            <summary>
            Finds the Parent of the specified ctrl parameter and then proceeds to find the
            parent of its parent, and so on. The name and type of each parent control is
            recorded.
            </summary>
            <param name="ctrl">The WinForms control to inspect.</param>
            <returns>StringBuilder instance of control parent hierachy.</returns>
        </member>
        <member name="T:Raize.CodeSiteLogging.Utility.WindowStyles">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_OVERLAPPED">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_POPUP">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_CHILD">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_MINIMIZE">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_VISIBLE">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_DISABLED">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_CLIPSIBLINGS">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_CLIPCHILDREN">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_MAXIMIZE">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_CAPTION">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_BORDER">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_DLGFRAME">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_VSCROLL">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_HSCROLL">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_SYSMENU">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_THICKFRAME">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_GROUP">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_TABSTOP">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_MINIMIZEBOX">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_MAXIMIZEBOX">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_TILED">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_ICONIC">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_SIZEBOX">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_OVERLAPPEDWINDOW">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_TILEDWINDOW">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_POPUPWINDOW">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowStyles.WS_CHILDWINDOW">
            
        </member>
        <member name="T:Raize.CodeSiteLogging.Utility.WindowExStyles">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_DLGMODALFRAME">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_NOPARENTNOTIFY">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_TOPMOST">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_ACCEPTFILES">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_TRANSPARENT">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_MDICHILD">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_TOOLWINDOW">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_WINDOWEDGE">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_CLIENTEDGE">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_CONTEXTHELP">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_RIGHT">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_LEFT">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_RTLREADING">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_LTRREADING">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_LEFTSCROLLBAR">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_RIGHTSCROLLBAR">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_CONTROLPARENT">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_STATICEDGE">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_APPWINDOW">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_OVERLAPPEDWINDOW">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_PALETTEWINDOW">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_LAYERED">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_NOINHERITLAYOUT">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_LAYOUTRTL">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_COMPOSITED">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.Utility.WindowExStyles.WS_EX_NOACTIVATE">
            
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSite">
            <summary>
            Use this static class to quickly send CodeSite messages without
            having to create an instance of the <see cref="T:CodeSiteLogger"/> class.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendMsgDetails(System.Int32,System.String,System.Text.StringBuilder,System.String)">
            <summary>
            General purpose method for sending a CodeSite message with additional details.
            </summary>
            <param name="msgType">CodeSite message type.</param>
            <param name="msg">The message string.</param>
            <param name="details">The details of the message in a StringBuilder.</param>
            <param name="typeName">Logical name of the information in details.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String)">
            <summary>
            Sends a simple CodeSite message.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite message.
            </summary>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String)">
            <summary>
            Sends a simple CodeSite typed message (e.g. Error, Level*, etc.).
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite typed message (e.g. Error, Level*, etc.).
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendMsg(System.String)">
            <summary>
            Sends a simple CodeSite message.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendMsg(System.Int32,System.String)">
            <summary>
            Sends a simple CodeSite typed message (e.g. Error, Level*, etc.).
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendFmtMsg(System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite message.
            </summary>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendFmtMsg(System.Int32,System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite typed message (e.g. Error, Level*, etc.).
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendNote(System.String)">
            <summary>
            Sends a CodeSite Note message.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendNote(System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite Note message.
            </summary>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendError(System.String)">
            <summary>
            Sends a CodeSite Error message.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendError(System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite Error message.
            </summary>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendWarning(System.String)">
            <summary>
            Sends a CodeSite Warning message.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendWarning(System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite Warning message.
            </summary>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendReminder(System.String)">
            <summary>
            Sends a CodeSite Reminder message.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendReminder(System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite Reminder message.
            </summary>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.String)">
            <summary>
            Evaluates the specified <c>String</c> and sends its value as a CodeSite 
            message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>String</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.String)">
            <summary>
            Evaluates the specified <c>String</c> and sends its value as a CodeSite 
            typed message.
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>String</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Object)">
            <summary>
            Evaluates the specified object and sends its value as a CodeSite 
            message. If the object is a reference type, the current 
            property values of the object are included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="obj">The object to be evaluated.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Object)">
            <summary>
            Evaluates the specified object and sends its value as a CodeSite 
            typed message. If the object is a reference type, the current 
            property values of the object are included in the message details.
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="obj">The object to be evaluated.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Int32)">
            <summary>
            Evaluates the specified <c>Integer</c> and sends its value as a CodeSite 
            message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Integer</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Int32)">
            <summary>
            Evaluates the specified <c>Integer</c> and sends its value as a CodeSite 
            typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Integer</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.UInt32)">
            <summary>
            Evaluates the specified <c>UInt32</c> and sends its value as a 
            CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt32</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.UInt32,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt32</c> and sends its hexidecimal
            value as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt32</c> value.</param>
            <param name="asHex">When <c>true</c>, send value in hex format.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.UInt32)">
            <summary>
            Evaluates the specified <c>UInt32</c> and sends its value as a 
            CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt32</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.UInt32,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt32</c> and sends its hexidecimal
            value as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt32</c> value.</param>
            <param name="asHex">When <c>true</c>, send value in hex format.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Int64)">
            <summary>
            Evaluates the specified <c>Int64</c> and sends its 
            value as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Int64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Int64)">
            <summary>
            Evaluates the specified <c>Int64</c> and sends its value as 
            a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Int64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.UInt64)">
            <summary>
            Evaluates the specified <c>UInt64</c> and sends its 
            value as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.UInt64,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt64</c> and sends its 
            hexidecimal value as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt64</c> value.</param>
            <param name="asHex">When <c>true</c>, send value in hex format.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.UInt64)">
            <summary>
            Evaluates the specified <c>UInt64</c> and sends its value as 
            a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.UInt64,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt64</c> and sends its hexidecimal
            value as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt64</c> value.</param>
            <param name="asHex">When <c>true</c>, send value in hex format.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Single)">
            <summary>
            Evaluates the specified <c>Single</c> and sends its value as 
            a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Single</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Single,System.Int32)">
            <summary>
            Evaluates the specified <c>Single</c> and sends its value as 
            a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Single</c> value.</param>
            <param name="precision">The number of decimal places to record.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Single)">
            <summary>
            Evaluates the specified <c>Single</c> and sends its value 
            as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Single</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Single,System.Int32)">
            <summary>
            Evaluates the specified <c>Single</c> and sends its value 
            as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Single</c> value.</param>
            <param name="precision">The number of decimal places to record.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Double)">
            <summary>
            Evaluates the specified <c>Double</c> and sends its value 
            as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Double</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Double,System.Int32)">
            <summary>
            Evaluates the specified <c>Double</c> and sends its value 
            as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Double</c> value.</param>
            <param name="precision">The number of decimal places to record.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Double)">
            <summary>
            Evaluates the specified <c>Double</c> and sends its 
            value as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Double</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Double,System.Int32)">
            <summary>
            Evaluates the specified <c>Double</c> and sends its 
            value as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Double</c> value.</param>
            <param name="precision">The number of decimal places to record.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Decimal)">
            <summary>
            Evaluates the specified <c>Decimal</c> and sends its value as a 
            CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Decimal</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Decimal,System.Boolean)">
            <summary>
            Evaluates the specified <c>Decimal</c> and sends its 
            value in currency format as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Decimal</c> value.</param>
            <param name="asCurrency">When <c>true</c>, send value in currency format.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Decimal)">
            <summary>
            Evaluates the specified <c>Decimal</c> and sends its value as 
            a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Decimal</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Decimal,System.Boolean)">
            <summary>
            Evaluates the specified <c>Decimal</c> and sends its 
            value in currency format as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Decimal</c> value.</param>
            <param name="asCurrency">When <c>true</c>, send value in currency format.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Boolean)">
            <summary>
            Evaluates the specified <c>Boolean</c> expression and sends its 
            value as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="expression">The <c>Boolean</c> expression.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Boolean)">
            <summary>
            Evaluates the specified <c>Boolean</c> expression and sends its 
            value as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="expression">The <c>Boolean</c> expression.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendAssigned(System.String,System.Object)">
            <summary>
            Determines if the specified object reference is assigned and sends 
            result as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="obj">The object reference.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendAssigned(System.Int32,System.String,System.Object)">
            <summary>
            Determines if the specified object reference is assigned and sends 
            result as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="obj">The object reference.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Drawing.Color)">
            <summary>
            Evaluates the specified <c>Color</c> and sends its value as a CodeSite 
            message. Individual RGB color values are included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="c">The <c>Color</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendDateTime(System.String,System.DateTime)">
            <summary>
            Evaluates the specified <c>DateTime</c> and sends its value as a 
            CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>DateTime</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendDateTime(System.Int32,System.String,System.DateTime)">
            <summary>
            Evaluates the specified <c>DateTime</c> and sends its value as a 
            CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>DateTime</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Drawing.Point)">
            <summary>
            Evaluates the specified <c>System.Drawing.Point</c> and sends its 
            value as a CodeSite message. Value is formatted as "(X, Y)".
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Point</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Drawing.Point)">
            <summary>
            Evaluates the specified <c>System.Drawing.Point</c> and sends its 
            value as a CodeSite typed message. Value is formatted as "(X, Y)".
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Point</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Drawing.Size)">
            <summary>
            Evaluates the specified <c>System.Drawing.Size</c> and sends its 
            value as a CodeSite message. Value is formatted as "(Width, Height)".
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Size</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Drawing.Size)">
            <summary>
            Evaluates the specified <c>System.Drawing.Size</c> and sends its 
            value as a CodeSite typed message. Value is formated as "(Width, Height)".
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Size</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Drawing.Rectangle)">
            <summary>
            Evaluates the specified <c>System.Drawing.Rectangle</c> and sends its 
            value as a CodeSite message. Value is formatted as "(Left, Top, Width, Height)".
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Rectangle</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.Int32,System.String,System.Drawing.Rectangle)">
            <summary>
            Evaluates the specified <c>System.Drawing.Rectangle</c> and sends its 
            value as a CodeSite typed message. Value is formatted as 
            "(Left, Top, Width, Height)".
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Rectangle</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Collections.IEnumerable)">
            <summary>
            Evaluates the specified <c>IEnumerable</c> list and sends its contents 
            as a CodeSite string list message. The string representations of 
            each item in the list are included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="list">The <c>IEnumerable</c> list.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendCollection(System.String,System.Collections.IEnumerable)">
            <summary>
            Evaluates the specified <c>IEnumerable</c> collection and sends its 
            contents as a CodeSite collection message. The property values of
            each item in the collection are included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="collection">The <c>IEnumerable</c> collection.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Drawing.Bitmap)">
            <summary>
            Encodes the image of the specified <c>Bitmap</c> and sends its data
            as a CodeSite bitmap message. The image content is included in the
            message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="bmp">The <c>Bitmap</c> image.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Drawing.Icon)">
            <summary>
            Encodes the image of the specified <c>Icon</c> and sends its data
            as a CodeSite bitmap message. The image content is included in the
            message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="ico">The <c>Icon</c> image.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Send(System.String,System.Drawing.Image)">
            <summary>
            Encodes the image of the specified <c>Image</c> and sends its data
            as a CodeSite bitmap message. The image content is included in the
            message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="img">The <c>Image</c>.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendScreenShot(System.String,System.IntPtr)">
            <summary>
            Captures the image of the window referenced by <c>handle</c> and sends
            the data as a CodeSite bitmap message. The image content is 
            included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="handle">The window handle.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendMemoryStatus">
            <summary>
            Records a snapshot of current memory utilization and sends the
            data in a CodeSite Memory Status message. The status information 
            is included in the message details.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendSystemInfo">
            <summary>
            Records information about the users system and sends the
            data in a CodeSite System Information message. The information 
            is included in the message details.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendWindowHandle(System.String,System.IntPtr)">
            <summary>
            Records low-level window-related information (i.e. class, styles, etc.)
            for the specified window handle and sends the data as a CodeSite
            Window Handle message. The information is included in the message details.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendTextFile(System.String,System.String)">
            <summary>
            Opens the specified text file and sends its contents as a CodeSite 
            Text File message. The file contents are included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="fileName">The name of the text file.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendStreamAsText(System.String,System.IO.Stream)">
            <summary>
            Sends the contents of the specified <c>Stream</c> as CodeSite Memory message.
            The contents of the stream (in text format) are included in the 
            message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="strm">The <c>Stream</c> data.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendStreamAsHex(System.String,System.IO.Stream)">
            <summary>
            Sends the contents of the specified <c>Stream</c> as CodeSite Memory message.
            The contents of the stream (in hex format) are included in the 
            message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="strm">The <c>Stream</c> data.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendFileAsHex(System.String,System.String)">
            <summary>
            Sends the contents of the specified file as CodeSite Memory message.
            The contents of the file (in hex format) are included in the 
            message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="fileName">The name of the text file.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendXmlFile(System.String,System.String)">
            <summary>
            Opens the specified XML file and sends its xml contents as a CodeSite 
            XML message. The XML data is included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="fileName">The name of the xml file.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendXmlData(System.String,System.String)">
            <summary>
            Evaluates the specified string containing XML data and sends the
            content as a CodeSite XML message. The XML data is included in 
            the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="xmlData">The XML data string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendControls(System.String,System.Windows.Forms.Control)">
            <summary>
            Evaluates the specified control and traverses its Controls hierarchy and
            records the name and type of each control. The hierarchy is included in 
            the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="ctrl">The control to inspect.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendParents(System.String,System.Windows.Forms.Control)">
            <summary>
            Evaluates the specified control and traverses its parent hierarchy and
            records the name and type of each control. The hierarchy is included in 
            the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="ctrl">The control to inspect.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.EnterMethod(System.String)">
            <summary>
            Sends the name of a method as CodeSite EnterMethod message to 
            indicate the start of a method block.
            </summary>
            <param name="methodName">The name of the method.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.EnterMethod(System.Object,System.String)">
            <summary>
            Evaluates the <c>Name</c> and type of specified object and sends
            these along with the method name as a CodeSite EnterMethod message 
            to indicate the start of a method block.
            </summary>
            <param name="obj">The instance of the object that defines the method (e.g. <c>this</c>).</param>
            <param name="methodName">The Name of the method.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.ExitMethod(System.String)">
            <summary>
            Sends the name of a method as CodeSite ExitMethod message to 
            indicate the end of a method block.
            </summary>
            <param name="methodName">The name of the method.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.ExitMethod(System.Object,System.String)">
            <summary>
            Evaluates the <c>Name</c> and type of specified object and sends
            these along with the method name as a CodeSite ExitMethod message 
            to indicate the end of a method block.
            </summary>
            <param name="obj">The instance of the object that defines the method (e.g. <c>this</c>).</param>
            <param name="methodName">The name of the method.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.ExitMethod(System.Object,System.String,System.Object)">
            <summary>
            Evaluates the <c>Name</c> and type of specified object and sends
            these along with the method name as a CodeSite ExitMethod message 
            to indicate the end of a method block. Also included is the value
            of the result object, which is useful for methods that return values.
            </summary>
            <param name="obj">The instance of the object that defines the method (e.g. <c>this</c>).</param>
            <param name="methodName">The name of the method.</param>
            <param name="result">The result value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.ExitMethodCollapse(System.String)">
            <summary>
            Sends the name of a method as CodeSite ExitMethod message to 
            indicate the end of a method block. The CodeSite Viewer will then
            collapse the completed method block.
            </summary>
            <param name="methodName">The name of the method.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.ExitMethodCollapse(System.Object,System.String)">
            <summary>
            Evaluates the <c>Name</c> and type of specified object and sends
            these along with the method name as a CodeSite ExitMethod message 
            to indicate the end of a method block. The CodeSite Viewer will then
            collapse the completed method block.
            </summary>
            <param name="obj">The instance of the object that defines the method (e.g. <c>this</c>).</param>
            <param name="methodName">The name of the method.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.ExitMethodCollapse(System.Object,System.String,System.Object)">
            <summary>
            Evaluates the <c>Name</c> and type of specified object and sends
            these along with the method name as a CodeSite ExitMethod message 
            to indicate the end of a method block. Also included is the value
            of the result object, which is useful for methods that return values.
            The CodeSite Viewer will then collapse the completed method block.
            </summary>
            <param name="obj">The instance of the object that defines the method (e.g. <c>this</c>).</param>
            <param name="methodName">The name of the method.</param>
            <param name="result">The result value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendStackTrace(System.String)">
            <summary>
            Generates a stack trace based on the current execution point and sends
            the data as a CodeSite Stack Trace message. The stack trace details are
            included in the message details.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendCustomData(System.String,Raize.CodeSiteLogging.ICodeSiteCustomData)">
            <summary>
            Utilizes the properties and methods of ICodeSiteCustomData to obtain
            custom formatted data from the specified <c>customData</c> object.
            The custom formatted data is included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="customData">The custom data.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Assert(System.Boolean,System.String)">
            <summary>
            Evaluates the specified expression and sends the string message
            as a CodeSite Error message if the expression fails.
            </summary>
            <param name="expression">The assert expression to evaluate.</param>
            <param name="msg">The assert message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendException(System.Exception)">
            <summary>
            Records the details of the specified <c>Exception</c> object and 
            sends the data as a CodeSite Exception message. The exception details
            are included in the message details.
            </summary>
            <param name="e">The <c>Exception</c> object.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendException(System.String,System.Exception)">
            <summary>
            Records the details of the specified <c>Exception</c> object and 
            sends the data as a CodeSite Exception message. The exception details
            are included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="e">The <c>Exception</c> object.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.String)">
            <summary>
            Sends a simple CodeSite message if the specified expression is true.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite message if the specified expression is true.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.Int32,System.String)">
            <summary>
            Sends a simple CodeSite typed message (e.g. Error, Level*, etc.)
            if the specified expression is true.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.Int32,System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite typed message (e.g. Error, Level*, etc.)
            if the specified expression is true.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.String,System.String)">
            <summary>
            Evaluates the specified <c>String</c> and sends its value as a CodeSite 
            message if the specified expression is true. 
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>String</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.Int32,System.String,System.String)">
            <summary>
            Evaluates the specified <c>String</c> and sends its value as a CodeSite 
            typed message if the specified expression is true.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>String</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.String,System.Object)">
            <summary>
            Evaluates the specified object and sends its value as a CodeSite 
            message if the specified expression is true. If the object is a 
            reference type, the current property values of the object are 
            included in the message details.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msg">The message string.</param>
            <param name="obj">The object to be evaluated.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.Int32,System.String,System.Object)">
            <summary>
            Evaluates the specified object and sends its value as a CodeSite 
            typed message if the specified expression is true. If the object is 
            a reference type, the current property values of the object are 
            included in the message details.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="obj">The object to be evaluated.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.String,System.Int32)">
            <summary>
            Evaluates the specified <c>Integer</c> and sends its value as a CodeSite 
            message if the specified expression is true. 
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Integer</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.Int32,System.String,System.Int32)">
            <summary>
            Evaluates the specified <c>Integer</c> and sends its value as a CodeSite 
            typed message if the specified expression is true. 
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Integer</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.String,System.Collections.IEnumerable)">
            <summary>
            Evaluates the specified <c>IEnumerable</c> list and sends its contents 
            as a CodeSite string list message. The string representations of 
            each item in the list are included in the message details.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msg">The message string.</param>
            <param name="list">The <c>IEnumerable</c> list.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.String,System.DateTime)">
            <summary>
            Evaluates the specified <c>DateTime</c> and sends its value as a 
            CodeSite message. 
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>DateTime</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.SendIf(System.Boolean,System.Int32,System.String,System.DateTime)">
            <summary>
            Evaluates the specified <c>DateTime</c> and sends its value as a 
            CodeSite typed message. 
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>DateTime</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.AddCheckPoint">
            <summary>
            Increments the check point counter and sends the value 
            as a CodeSite CheckPoint message.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.ResetCheckPoint">
            <summary>
            Resets the check point counter to 0.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.AddSeparator">
            <summary>
            Sends a CodeSite Separator message to visually separate 
            messages in the resulting log.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.AddResetSeparator">
            <summary>
            Sends a CodeSite Reset Separator message to visually separate 
            messages in the resulting log and reset the indent level.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.Object)">
            <summary>
            Evaluates the specified object and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="obj">The object to evaluate.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.Object)">
            <summary>
            Evaluates the specified object and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="obj">The object to evaluate.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String)">
            <summary>
            Evaluates the specified string and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The string value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.String)">
            <summary>
            Evaluates the specified string and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The string value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.Object[])">
            <summary>
            Updates the <c>lineID</c> row in the Viewer's ScratchPad with
            the formatted information. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.Int32)">
            <summary>
            Evaluates the specified <c>Integer</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Integer</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.Int32)">
            <summary>
            Evaluates the specified <c>Integer</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Integer</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.UInt32)">
            <summary>
            Evaluates the specified <c>UInt32</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt32</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.UInt32)">
            <summary>
            Evaluates the specified <c>UInt32</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>UInt32</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.UInt32,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt32</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt32</c> value.</param>
            <param name="asHex">When <c>true</c>, format as hex.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.UInt32,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt32</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Integer</c> value.</param>
            <param name="asHex">When <c>true</c>, format value in hex.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.Int64)">
            <summary>
            Evaluates the specified <c>Int64</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Int64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.Int64)">
            <summary>
            Evaluates the specified <c>Int64</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Int64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.UInt64)">
            <summary>
            Evaluates the specified <c>UInt64</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.UInt64)">
            <summary>
            Evaluates the specified <c>UInt64</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>UInt64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.UInt64,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt64</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt64</c> value.</param>
            <param name="asHex">When <c>true</c>, format value in hex.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.UInt64,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt64</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>UInt64</c> value.</param>
            <param name="asHex">When <c>true</c>, format value as hex.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.Double)">
            <summary>
            Evaluates the specified <c>Double</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Double</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.Double)">
            <summary>
            Evaluates the specified <c>Double</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Double</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.Decimal)">
            <summary>
            Evaluates the specified <c>Decimal</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Decimal</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.Decimal)">
            <summary>
            Evaluates the specified <c>Decimal</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Decimal</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.Decimal,System.Boolean)">
            <summary>
            Evaluates the specified <c>Decimal</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Decimal</c> value.</param>
            <param name="asCurrency">When <c>true</c>, format value as currency.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.Decimal,System.Boolean)">
            <summary>
            Evaluates the specified <c>Decimal</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Decimal</c> value.</param>
            <param name="asCurrency">When <c>true</c>, format value as currency.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.Boolean)">
            <summary>
            Evaluates the specified <c>Boolean</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Boolean</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.Boolean)">
            <summary>
            Evaluates the specified <c>Boolean</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Boolean</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.Drawing.Color)">
            <summary>
            Evaluates the specified <c>Color</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Color</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.Drawing.Color)">
            <summary>
            Evaluates the specified <c>Color</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Color</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.String,System.DateTime)">
            <summary>
            Evaluates the specified <c>DateTime</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>DateTime</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Write(System.String,System.DateTime)">
            <summary>
            Evaluates the specified <c>DateTime</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>DateTime</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.LogEvent(System.String)">
            <summary>
            Writes the specified message string as an Information entry in the Event Log.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.LogEvent(System.String,System.Int32)">
            <summary>
            Writes the specified message string and event ID as an Information entry in the 
            Event Log.
            </summary>
            <param name="msg">The message string.</param>
            <param name="eventId">The application specific identifier for the event.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.LogEvent(System.String,System.Int32,System.Int16)">
            <summary>
            Writes the specified message string, event ID, and category as an Information
            entry in the Event Log.
            </summary>
            <param name="msg">The message string.</param>
            <param name="eventId">The application specific identifier for the event.</param>
            <param name="category">The application specific category associated with the message.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.LogWarning(System.String)">
            <summary>
            Writes the specified message string as a Warning entry in the Event Log.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.LogWarning(System.String,System.Int32)">
            <summary>
            Writes the specified message string and event ID as a Warning entry in the
            Event Log.
            </summary>
            <param name="msg">The message string.</param>
            <param name="eventId">The application specific identifier for the event.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.LogWarning(System.String,System.Int32,System.Int16)">
            <summary>
            Writes the specified message string, event ID, and category as a Warning
            entry in the Event Log.
            </summary>
            <param name="msg">The message string.</param>
            <param name="eventId">The application specific identifier for the event.</param>
            <param name="category">The application specific category associated with the message.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.LogError(System.String)">
            <summary>
            Writes the specified message string as an Error entry in the Event Log.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.LogError(System.String,System.Int32)">
            <summary>
            Writes the specified message string and event ID as an Error entry in the
            Event Log.
            </summary>
            <param name="msg">The message string.</param>
            <param name="eventId">The application specific identifier for the event.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.LogError(System.String,System.Int32,System.Int16)">
            <summary>
            Writes the specified message string, event ID, and category as an Error
            entry in the Event Log.
            </summary>
            <param name="msg">The message string.</param>
            <param name="eventId">The application specific identifier for the event.</param>
            <param name="category">The application specific category associated with the message.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.ConnectUsingCopyData">
            <summary>
            Override the CodeSiteManager's default connection by connecting to
            the local CodeSite Dispatcher using wm_CopyData. 
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.ConnectUsingTcp(System.String,System.Int32)">
            <summary>
            Override the CodeSiteManager's default connection by connecting to
            a local or remote CodeSite Dispatcher using TCP.
            </summary>
            <param name="host">The host name or IP address of remote computer running CodeSite Dispatcher.</param>
            <param name="port">The port number being monitored by CodeSite Dispatcher for TCP messages.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.ConnectUsingTcp(System.String)">
            <summary>
            Override the CodeSiteManager's default connection by connecting to
            a local or remote CodeSite Dispatcher using TCP. (The default TCP Port 
            for the CodeSite Dispatcher is used.)
            </summary>
            <param name="host">The host name or IP address of remote computer running CodeSite Dispatcher.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.ConnectUsingTcp">
            <summary>
            Override the CodeSiteManager's default connection by connecting to
            the local CodeSite Dispatcher using TCP. (The default TCP Port 
            for the CodeSite Dispatcher is used.)
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.UseCodeSiteManagerConnection">
            <summary>
            Remove any existing connection override and once again use the connection
            that is defined by the CodeSiteManager.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Installed">
            <summary>
            Determines if CodeSite Client Tools are installed.
            </summary>
            <returns><c>true</c>, if CodeSite Client Tools are installed.</returns>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.CloseDispatcher">
            <summary>
            Closes the CodeSite Dispatcher if it is running.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSite.Clear">
            <summary>
            Instructs the CodeSite Viewer to clear all its messages.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSite.Category">
            <summary>
            Use this property to specify the string value to be used to for
            categorizing CodeSite messages generated from this 
            <see cref="T:CodeSiteLogger"/> instance.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSite.CategoryBackColor">
            <summary>
            Use this property to specify the background color to be used
            by the CodeSite Viewer for displaying messages generated 
            from this <see cref="T:CodeSiteLogger"/> instance.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSite.CategoryForeColor">
            <summary>
            Use this property to specify the font color to be used
            by the CodeSite Viewer for displaying messages generated 
            from this <see cref="T:CodeSiteLogger"/> instance.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSite.DateTimeFormat">
            <summary>
            Use this property to specify the datetime format to be used
            when evaluated <c>DateTime</c> values.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSite.Destination">
            <summary>
            Use this property to specify where messages generated by
            this <see cref="T:CodeSiteLogger"/> instance will be sent.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSite.Enabled">
            <summary>
            Use this property to control if this <see cref="T:CodeSiteLogger"/>
            instance actually sends CodeSite messages.
            </summary>
        </member>
        <member name="E:Raize.CodeSiteLogging.CodeSite.Sending">
            <summary>
            Occurs just before this <see cref="T:CodeSiteLogger"/> instance
            sends a message. Handle this event to preview the message information, 
            redirect the information to a custom location (e.g. database table), 
            or perform custom filtering by cancelling the sending process for 
            select messages.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteConfiguration">
            <summary>
            This static class is used by the CodeSiteManager to access
            CodeSite configuration information from the application's 
            configuration file.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConfiguration.Load">
            <summary>
            This is the main method that gets called by the CodeSiteManager to
            load any configuration details for CodeSite.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConfiguration.ReadManager(System.Xml.XmlNode)">
            <summary>
            This method is called by the Load method to read the details
            of a manager node in the configuration file.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConfiguration.ReadConnection(System.Xml.XmlNode)">
            <summary>
            This method is called by the ReadManager method to read the details
            of a connection node in the configuration file.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConfiguration.ReadDestination(System.Xml.XmlNode)">
            <summary>
            This method is called by the Load method to read the details
            of a destination node in the configuration file.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConfiguration.ReadLogFile(System.Xml.XmlNode,Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            This method is used by the ReadDestination method to read
            in details for a LogFile destination.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConfiguration.ReadTCP(System.Xml.XmlNode,Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            This method is used by the ReadDestination method to read
            in details for a TCP destination.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConfiguration.ReadUDP(System.Xml.XmlNode,Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            This method is used by the ReadDestination method to read
            in details for a UDP destination.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConfiguration.ReadHTTP(System.Xml.XmlNode,Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            This method is used by the ReadDestination method to read
            in details for an HTTP destination.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConfiguration.ReadAlias(System.Xml.XmlNode,Raize.CodeSiteLogging.CodeSiteDestination)">
            <summary>
            This method is used by the ReadDestination method to read
            in details for an Alias destination.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteConfiguration.RaiseException(System.String)">
            
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteSendingEventArgs">
            <summary>
            Custom EventArgs descendant that includes properties for accessing 
            current message data.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteSendingEventArgs.MsgData">
            <summary>
            Data elements associated with the current CodeSite message.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteSendingEventHandler">
            <summary>
            Custom delegate class that includes CodeSiteSendMsgEventArgs in signature.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteLogger">
            <summary>
            Use CodeSiteLogger instances to capture, package, and send CodeSite
            logging messages.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.#ctor">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendCodeSiteMsgDetails(System.Int32,System.String,System.String,System.String)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendCodeSiteMsg(System.Int32,System.String,System.String)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.InspectorTypeToMsgType(Raize.CodeSiteLogging.CodeSiteInspectorType,System.Int32)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.TranslateSpecialCharacters(System.String)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendCustomFormattedObject(System.String,Raize.CodeSiteLogging.ICodeSiteCustomData)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendMsgDetails(System.Int32,System.String,System.Text.StringBuilder,System.String)">
            <summary>
            General purpose method for sending a CodeSite message with additional details.
            </summary>
            <param name="msgType">CodeSite message type.</param>
            <param name="msg">The message string.</param>
            <param name="details">The details of the message in a StringBuilder.</param>
            <param name="typeName">Logical name of the information in details.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendCodeSiteMsgObject(System.Int32,System.String,System.Object)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.GetPropertyValues(System.Object)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendObjectProperties(System.String,System.Object,System.String)">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String)">
            <summary>
            Sends a simple CodeSite message.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite message.
            </summary>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String)">
            <summary>
            Sends a simple CodeSite typed message (e.g. Error, Level*, etc.).
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite typed message (e.g. Error, Level*, etc.).
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendMsg(System.String)">
            <summary>
            Sends a simple CodeSite message.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendMsg(System.Int32,System.String)">
            <summary>
            Sends a simple CodeSite typed message (e.g. Error, Level*, etc.).
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendFmtMsg(System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite message.
            </summary>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendFmtMsg(System.Int32,System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite typed message (e.g. Error, Level*, etc.).
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendNote(System.String)">
            <summary>
            Sends a CodeSite Note message.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendNote(System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite Note message.
            </summary>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendError(System.String)">
            <summary>
            Sends a CodeSite Error message.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendError(System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite Error message.
            </summary>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendWarning(System.String)">
            <summary>
            Sends a CodeSite Warning message.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendWarning(System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite Warning message.
            </summary>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendReminder(System.String)">
            <summary>
            Sends a CodeSite Reminder message.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendReminder(System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite Reminder message.
            </summary>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.String)">
            <summary>
            Evaluates the specified <c>String</c> and sends its value as a CodeSite 
            message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>String</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.String)">
            <summary>
            Evaluates the specified <c>String</c> and sends its value as a CodeSite 
            typed message.
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>String</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Object)">
            <summary>
            Evaluates the specified object and sends its value as a CodeSite 
            message. If the object is a reference type, the current 
            property values of the object are included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="obj">The object to be evaluated.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Object)">
            <summary>
            Evaluates the specified object and sends its value as a CodeSite 
            typed message. If the object is a reference type, the current 
            property values of the object are included in the message details.
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="obj">The object to be evaluated.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Int32)">
            <summary>
            Evaluates the specified <c>Integer</c> and sends its value as a CodeSite 
            message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Integer</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Int32)">
            <summary>
            Evaluates the specified <c>Integer</c> and sends its value as a CodeSite 
            typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Integer</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.UInt32)">
            <summary>
            Evaluates the specified <c>UInt32</c> and sends its value as a 
            CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt32</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.UInt32,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt32</c> and sends its hexidecimal
            value as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt32</c> value.</param>
            <param name="asHex">When <c>true</c>, send value in hex format.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.UInt32)">
            <summary>
            Evaluates the specified <c>UInt32</c> and sends its value as a 
            CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt32</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.UInt32,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt32</c> and sends its hexidecimal
            value as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt32</c> value.</param>
            <param name="asHex">When <c>true</c>, send value in hex format.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Int64)">
            <summary>
            Evaluates the specified <c>Int64</c> and sends its 
            value as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Int64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Int64)">
            <summary>
            Evaluates the specified <c>Int64</c> and sends its value as 
            a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Int64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.UInt64)">
            <summary>
            Evaluates the specified <c>UInt64</c> and sends its 
            value as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.UInt64,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt64</c> and sends its 
            hexidecimal value as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt64</c> value.</param>
            <param name="asHex">When <c>true</c>, send value in hex format.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.UInt64)">
            <summary>
            Evaluates the specified <c>UInt64</c> and sends its value as 
            a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.UInt64,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt64</c> and sends its hexidecimal
            value as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt64</c> value.</param>
            <param name="asHex">When <c>true</c>, send value in hex format.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Single)">
            <summary>
            Evaluates the specified <c>Single</c> and sends its value as 
            a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Single</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Single,System.Int32)">
            <summary>
            Evaluates the specified <c>Single</c> and sends its value as 
            a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Single</c> value.</param>
            <param name="precision">The number of decimal places to record.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Single)">
            <summary>
            Evaluates the specified <c>Single</c> and sends its value 
            as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Single</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Single,System.Int32)">
            <summary>
            Evaluates the specified <c>Single</c> and sends its value 
            as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Single</c> value.</param>
            <param name="precision">The number of decimal places to record.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Double)">
            <summary>
            Evaluates the specified <c>Double</c> and sends its value 
            as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Double</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Double,System.Int32)">
            <summary>
            Evaluates the specified <c>Double</c> and sends its value 
            as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Double</c> value.</param>
            <param name="precision">The number of decimal places to record.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Double)">
            <summary>
            Evaluates the specified <c>Double</c> and sends its value
            as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Double</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Double,System.Int32)">
            <summary>
            Evaluates the specified <c>Double</c> and sends its value
            as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Double</c> value.</param>
            <param name="precision">The number of decimal places to record.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Decimal)">
            <summary>
            Evaluates the specified <c>Decimal</c> and sends its value as a 
            CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Decimal</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Decimal,System.Boolean)">
            <summary>
            Evaluates the specified <c>Decimal</c> and sends its 
            value in currency format as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Decimal</c> value.</param>
            <param name="asCurrency">When <c>true</c>, send value in currency format.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Decimal)">
            <summary>
            Evaluates the specified <c>Decimal</c> and sends its value as 
            a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Decimal</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Decimal,System.Boolean)">
            <summary>
            Evaluates the specified <c>Decimal</c> and sends its 
            value in currency format as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Decimal</c> value.</param>
            <param name="asCurrency">When <c>true</c>, send value in currency format.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Boolean)">
            <summary>
            Evaluates the specified <c>Boolean</c> expression and sends its 
            value as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="expression">The <c>Boolean</c> expression.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Boolean)">
            <summary>
            Evaluates the specified <c>Boolean</c> expression and sends its 
            value as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="expression">The <c>Boolean</c> expression.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendAssigned(System.String,System.Object)">
            <summary>
            Determines if the specified object reference is assigned and sends 
            result as a CodeSite message. 
            </summary>
            <param name="msg">The message string.</param>
            <param name="obj">The object reference.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendAssigned(System.Int32,System.String,System.Object)">
            <summary>
            Determines if the specified object reference is assigned and sends 
            result as a CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="obj">The object reference.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Drawing.Color)">
            <summary>
            Evaluates the specified <c>Color</c> and sends its value as a CodeSite 
            message. Individual RGB color values are included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Color</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendDateTime(System.String,System.DateTime)">
            <summary>
            Evaluates the specified <c>DateTime</c> and sends its value as a 
            CodeSite message.
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>DateTime</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendDateTime(System.Int32,System.String,System.DateTime)">
            <summary>
            Evaluates the specified <c>DateTime</c> and sends its value as a 
            CodeSite typed message. 
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>DateTime</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Drawing.Point)">
            <summary>
            Evaluates the specified <c>System.Drawing.Point</c> and sends its 
            value as a CodeSite message. Value is formatted as "(X, Y)".
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Point</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Drawing.Point)">
            <summary>
            Evaluates the specified <c>System.Drawing.Point</c> and sends its 
            value as a CodeSite typed message. Value is formatted as "(X, Y)".
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Point</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Drawing.Size)">
            <summary>
            Evaluates the specified <c>System.Drawing.Size</c> and sends its 
            value as a CodeSite message. Value is formatted as "(Width, Height)".
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Size</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Drawing.Size)">
            <summary>
            Evaluates the specified <c>System.Drawing.Size</c> and sends its 
            value as a CodeSite typed message. Value is formated as "(Width, Height)".
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Size</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Drawing.Rectangle)">
            <summary>
            Evaluates the specified <c>System.Drawing.Rectangle</c> and sends its 
            value as a CodeSite message. Value is formatted as "(Left, Top, Width, Height)".
            </summary>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Rectangle</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.Int32,System.String,System.Drawing.Rectangle)">
            <summary>
            Evaluates the specified <c>System.Drawing.Rectangle</c> and sends its 
            value as a CodeSite typed message. Value is formatted as 
            "(Left, Top, Width, Height)".
            </summary>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Rectangle</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Collections.IEnumerable)">
            <summary>
            Evaluates the specified <c>IEnumerable</c> list and sends its contents 
            as a CodeSite string list message. The string representations of 
            each item in the list are included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="list">The <c>IEnumerable</c> list.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendCollection(System.String,System.Collections.IEnumerable)">
            <summary>
            Evaluates the specified <c>IEnumerable</c> collection and sends its 
            contents as a CodeSite collection message. The property values of
            each item in the collection are included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="collection">The <c>IEnumerable</c> collection.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Drawing.Bitmap)">
            <summary>
            Encodes the image of the specified <c>Bitmap</c> and sends its data
            as a CodeSite bitmap message. The image content is included in the
            message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="bmp">The <c>Bitmap</c> image.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Drawing.Icon)">
            <summary>
            Encodes the image of the specified <c>Icon</c> and sends its data
            as a CodeSite bitmap message. The image content is included in the
            message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="ico">The <c>Icon</c> image.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Send(System.String,System.Drawing.Image)">
            <summary>
            Encodes the image of the specified <c>Image</c> and sends its data
            as a CodeSite bitmap message. The image content is included in the
            message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="img">The <c>Image</c>.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendScreenShot(System.String,System.IntPtr)">
            <summary>
            Captures the image of the window referenced by <c>handle</c> and sends
            the data as a CodeSite bitmap message. The image content is 
            included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="handle">The window handle.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendMemoryStatus">
            <summary>
            Records a snapshot of current memory utilization and sends the
            data in a CodeSite Memory Status message. The status information 
            is included in the message details.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendSystemInfo">
            <summary>
            Records information about the users system and sends the
            data in a CodeSite System Information message. The information
            is included in the message details.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendWindowHandle(System.String,System.IntPtr)">
            <summary>
            Records low-level window-related information (i.e. class, styles, etc.)
            for the specified window handle and sends the data as a CodeSite
            Window Handle message. The information is included in the message details.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendTextFile(System.String,System.String)">
            <summary>
            Opens the specified text file and sends its contents as a CodeSite 
            Text File message. The file contents are included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="fileName">The name of the text file.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendStreamAsText(System.String,System.IO.Stream)">
            <summary>
            Sends the contents of the specified <c>Stream</c> as CodeSite Memory message.
            The contents of the stream (in text format) are included in the 
            message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="strm">The <c>Stream</c> data.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendStreamAsHex(System.String,System.IO.Stream)">
            <summary>
            Sends the contents of the specified <c>Stream</c> as CodeSite Memory message.
            The contents of the stream (in hex format) are included in the 
            message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="strm">The <c>Stream</c> data.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendFileAsHex(System.String,System.String)">
            <summary>
            Sends the contents of the specified file as CodeSite Memory message.
            The contents of the file (in hex format) are included in the 
            message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="fileName">The name of the text file.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendXmlFile(System.String,System.String)">
            <summary>
            Opens the specified XML file and sends its xml contents as a CodeSite 
            XML message. The XML data is included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="fileName">The name of the xml file.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendXmlData(System.String,System.String)">
            <summary>
            Evaluates the specified string containing XML data and sends the
            content as a CodeSite XML message. The XML data is included in 
            the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="xmlData">The XML data string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendControls(System.String,System.Windows.Forms.Control)">
            <summary>
            Evaluates the specified control and traverses its Controls hierarchy and
            records the name and type of each control. The hierarchy is included in 
            the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="ctrl">The control to inspect.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendParents(System.String,System.Windows.Forms.Control)">
            <summary>
            Evaluates the specified control and traverses its parent hierarchy and
            records the name and type of each control. The hierarchy is included in 
            the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="ctrl">The control to inspect.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.EnterMethod(System.String)">
            <summary>
            Sends the name of a method as CodeSite EnterMethod message to 
            indicate the start of a method block.
            </summary>
            <param name="methodName">The name of the method.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.EnterMethod(System.Object,System.String)">
            <summary>
            Evaluates the <c>Name</c> and type of specified object and sends
            these along with the method name as a CodeSite EnterMethod message 
            to indicate the start of a method block.
            </summary>
            <param name="obj">The instance of the object that defines the method (e.g. <c>this</c>).</param>
            <param name="methodName">The Name of the method.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.ExitMethod(System.String)">
            <summary>
            Sends the name of a method as CodeSite ExitMethod message to 
            indicate the end of a method block.
            </summary>
            <param name="methodName">The name of the method.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.ExitMethod(System.Object,System.String)">
            <summary>
            Evaluates the <c>Name</c> and type of specified object and sends
            these along with the method name as a CodeSite ExitMethod message 
            to indicate the end of a method block.
            </summary>
            <param name="obj">The instance of the object that defines the method (e.g. <c>this</c>).</param>
            <param name="methodName">The name of the method.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.ExitMethod(System.Object,System.String,System.Object)">
            <summary>
            Evaluates the <c>Name</c> and type of specified object and sends
            these along with the method name as a CodeSite ExitMethod message 
            to indicate the end of a method block. Also included is the value
            of the result object, which is useful for methods that return values.
            </summary>
            <param name="obj">The instance of the object that defines the method (e.g. <c>this</c>).</param>
            <param name="methodName">The name of the method.</param>
            <param name="result">The result value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.ExitMethodCollapse(System.String)">
            <summary>
            Sends the name of a method as CodeSite ExitMethod message to 
            indicate the end of a method block. The CodeSite Viewer will then
            collapse the completed method block.
            </summary>
            <param name="methodName">The name of the method.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.ExitMethodCollapse(System.Object,System.String)">
            <summary>
            Evaluates the <c>Name</c> and type of specified object and sends
            these along with the method name as a CodeSite ExitMethod message 
            to indicate the end of a method block. The CodeSite Viewer will then
            collapse the completed method block.
            </summary>
            <param name="obj">The instance of the object that defines the method (e.g. <c>this</c>).</param>
            <param name="methodName">The name of the method.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.ExitMethodCollapse(System.Object,System.String,System.Object)">
            <summary>
            Evaluates the <c>Name</c> and type of specified object and sends
            these along with the method name as a CodeSite ExitMethod message 
            to indicate the end of a method block. Also included is the value
            of the result object, which is useful for methods that return values.
            The CodeSite Viewer will then collapse the completed method block.
            </summary>
            <param name="obj">The instance of the object that defines the method (e.g. <c>this</c>).</param>
            <param name="methodName">The name of the method.</param>
            <param name="result">The result value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendStackTrace(System.String)">
            <summary>
            Generates a stack trace based on the current execution point and sends
            the data as a CodeSite Stack Trace message. The stack trace details are
            included in the message details.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendCustomData(System.String,Raize.CodeSiteLogging.ICodeSiteCustomData)">
            <summary>
            Utilizes the properties and methods of ICodeSiteCustomData to obtain
            custom formatted data from the specified <c>customData</c> object.
            The custom formatted data is included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="customData">The custom data.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Assert(System.Boolean,System.String)">
            <summary>
            Evaluates the specified expression and sends the string message
            as a CodeSite Error message if the expression fails.
            </summary>
            <param name="expression">The assert expression to evaluate.</param>
            <param name="msg">The assert message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendException(System.Exception)">
            <summary>
            Records the details of the specified <c>Exception</c> object and 
            sends the data as a CodeSite Exception message. The exception details
            are included in the message details.
            </summary>
            <param name="e">The <c>Exception</c> object.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendException(System.String,System.Exception)">
            <summary>
            Records the details of the specified <c>Exception</c> object and 
            sends the data as a CodeSite Exception message. The exception details
            are included in the message details.
            </summary>
            <param name="msg">The message string.</param>
            <param name="e">The <c>Exception</c> object.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.String)">
            <summary>
            Sends a simple CodeSite message if the specified expression is true.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite message if the specified expression is true.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.Int32,System.String)">
            <summary>
            Sends a simple CodeSite typed message (e.g. Error, Level*, etc.)
            if the specified expression is true.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.Int32,System.String,System.Object[])">
            <summary>
            Sends a formatted CodeSite typed message (e.g. Error, Level*, etc.)
            if the specified expression is true.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.String,System.String)">
            <summary>
            Evaluates the specified <c>String</c> and sends its value as a CodeSite 
            message if the specified expression is true. 
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>String</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.Int32,System.String,System.String)">
            <summary>
            Evaluates the specified <c>String</c> and sends its value as a CodeSite 
            typed message if the specified expression is true.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>String</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.String,System.Object)">
            <summary>
            Evaluates the specified object and sends its value as a CodeSite 
            message if the specified expression is true. If the object is a 
            reference type, the current property values of the object are 
            included in the message details.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msg">The message string.</param>
            <param name="obj">The object to be evaluated.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.Int32,System.String,System.Object)">
            <summary>
            Evaluates the specified object and sends its value as a CodeSite 
            typed message if the specified expression is true. If the object is 
            a reference type, the current property values of the object are 
            included in the message details.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="obj">The object to be evaluated.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.String,System.Int32)">
            <summary>
            Evaluates the specified <c>Integer</c> and sends its value as a CodeSite 
            message if the specified expression is true. 
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Integer</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.Int32,System.String,System.Int32)">
            <summary>
            Evaluates the specified <c>Integer</c> and sends its value as a CodeSite 
            typed message if the specified expression is true. 
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Integer</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.String,System.Collections.IEnumerable)">
            <summary>
            Evaluates the specified <c>IEnumerable</c> list and sends its contents 
            as a CodeSite string list message if the specified expression is true. 
            The string representations of 
            each item in the list are included in the message details.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msg">The message string.</param>
            <param name="list">The <c>IEnumerable</c> list.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.String,System.DateTime)">
            <summary>
            Evaluates the specified <c>DateTime</c> and sends its value as a 
            CodeSite message if the specified expression is true.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>DateTime</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.SendIf(System.Boolean,System.Int32,System.String,System.DateTime)">
            <summary>
            Evaluates the specified <c>DateTime</c> and sends its value as a 
            CodeSite typed message if the specified expression is true.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="msgType">CodeSite message type <see cref="T:CodeSiteMsgType"/>.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>DateTime</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.AddCheckPoint">
            <summary>
            Increments the check point counter and sends the value 
            as a CodeSite CheckPoint message.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.ResetCheckPoint">
            <summary>
            Resets the check point counter to 0.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.AddSeparator">
            <summary>
            Sends a CodeSite Separator message to visually separate 
            messages in the resulting log.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.AddResetSeparator">
            <summary>
            Sends a CodeSite Separator message to visually separate 
            messages in the resulting log and reset the indent level.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.Object)">
            <summary>
            Evaluates the specified object and updates the <c>lineID</c> row
            in the Viewer's ScratchPad.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="obj">The object to evaluate.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.Object)">
            <summary>
            Evaluates the specified object and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="obj">The object to evaluate.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String)">
            <summary>
            Evaluates the specified string and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The string value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.String)">
            <summary>
            Evaluates the specified string and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The string value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.Object[])">
            <summary>
            Updates the <c>lineID</c> row in the Viewer's ScratchPad with
            the formatted information. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="fmt">The format string.</param>
            <param name="args">The format arguments.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.Int32)">
            <summary>
            Evaluates the specified <c>Integer</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Integer</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.Int32)">
            <summary>
            Evaluates the specified <c>Integer</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Integer</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.UInt32)">
            <summary>
            Evaluates the specified <c>UInt32</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt32</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.UInt32)">
            <summary>
            Evaluates the specified <c>UInt32</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>UInt32</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.UInt32,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt32</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt32</c> value.</param>
            <param name="asHex">When <c>true</c>, format as hex.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.UInt32,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt32</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Integer</c> value.</param>
            <param name="asHex">When <c>true</c>, format value in hex.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.Int64)">
            <summary>
            Evaluates the specified <c>Int64</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Int64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.Int64)">
            <summary>
            Evaluates the specified <c>Int64</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Int64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.UInt64)">
            <summary>
            Evaluates the specified <c>UInt64</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.UInt64)">
            <summary>
            Evaluates the specified <c>UInt64</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>UInt64</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.UInt64,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt64</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>UInt64</c> value.</param>
            <param name="asHex">When <c>true</c>, format value in hex.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.UInt64,System.Boolean)">
            <summary>
            Evaluates the specified <c>UInt64</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>UInt64</c> value.</param>
            <param name="asHex">When <c>true</c>, format value as hex.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.Double)">
            <summary>
            Evaluates the specified <c>Double</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Double</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.Double)">
            <summary>
            Evaluates the specified <c>Double</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Double</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.Decimal)">
            <summary>
            Evaluates the specified <c>Decimal</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Decimal</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.Decimal)">
            <summary>
            Evaluates the specified <c>Decimal</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Decimal</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.Decimal,System.Boolean)">
            <summary>
            Evaluates the specified <c>Decimal</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Decimal</c> value.</param>
            <param name="asCurrency">When <c>true</c>, format value as currency.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.Decimal,System.Boolean)">
            <summary>
            Evaluates the specified <c>Decimal</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Decimal</c> value.</param>
            <param name="asCurrency">When <c>true</c>, format value as currency.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.Boolean)">
            <summary>
            Evaluates the specified <c>Boolean</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Boolean</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.Boolean)">
            <summary>
            Evaluates the specified <c>Boolean</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Boolean</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.Drawing.Color)">
            <summary>
            Evaluates the specified <c>Color</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>Color</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.Drawing.Color)">
            <summary>
            Evaluates the specified <c>Color</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>Color</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.DateTime)">
            <summary>
            Evaluates the specified <c>DateTime</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>DateTime</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.DateTime)">
            <summary>
            Evaluates the specified <c>DateTime</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>DateTime</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.Drawing.Point)">
            <summary>
            Evaluates the specified <c>System.Drawing.Point</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Point</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.Drawing.Point)">
            <summary>
            Evaluates the specified <c>System.Drawing.Point</c> and updates 
            the <c>lineID</c> row in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>System.Drawing.Point</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.Drawing.Size)">
            <summary>
            Evaluates the specified <c>System.Drawing.Size</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Size</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.Drawing.Size)">
            <summary>
            Evaluates the specified <c>System.Drawing.Size</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>System.Drawing.Size</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.String,System.Drawing.Rectangle)">
            <summary>
            Evaluates the specified <c>System.Drawing.Rectangle</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. The value is prefixed with message string.
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="msg">The message string.</param>
            <param name="value">The <c>System.Drawing.Rectangle</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Write(System.String,System.Drawing.Rectangle)">
            <summary>
            Evaluates the specified <c>System.Drawing.Rectangle</c> and updates the <c>lineID</c> row
            in the Viewer's ScratchPad. 
            </summary>
            <param name="lineID">The ID of ScratchPad line to update.</param>
            <param name="value">The <c>System.Drawing.Rectangle</c> value.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.EventLogSourceName">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.LogEvent(System.String)">
            <summary>
            Writes the specified message string as an Information entry in the Event Log.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.LogEvent(System.String,System.Int32)">
            <summary>
            Writes the specified message string and event ID as an Information entry in the 
            Event Log.
            </summary>
            <param name="msg">The message string.</param>
            <param name="eventId">The application specific identifier for the event.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.LogEvent(System.String,System.Int32,System.Int16)">
            <summary>
            Writes the specified message string, event ID, and category as an Information
            entry in the Event Log.
            </summary>
            <param name="msg">The message string.</param>
            <param name="eventId">The application specific identifier for the event.</param>
            <param name="category">The application specific category associated with the message.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.LogWarning(System.String)">
            <summary>
            Writes the specified message string as a Warning entry in the Event Log.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.LogWarning(System.String,System.Int32)">
            <summary>
            Writes the specified message string and event ID as a Warning entry in the
            Event Log.
            </summary>
            <param name="msg">The message string.</param>
            <param name="eventId">The application specific identifier for the event.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.LogWarning(System.String,System.Int32,System.Int16)">
            <summary>
            Writes the specified message string, event ID, and category as a Warning
            entry in the Event Log.
            </summary>
            <param name="msg">The message string.</param>
            <param name="eventId">The application specific identifier for the event.</param>
            <param name="category">The application specific category associated with the message.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.LogError(System.String)">
            <summary>
            Writes the specified message string as an Error entry in the Event Log.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.LogError(System.String,System.Int32)">
            <summary>
            Writes the specified message string and event ID as an Error entry in the
            Event Log.
            </summary>
            <param name="msg">The message string.</param>
            <param name="eventId">The application specific identifier for the event.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.LogError(System.String,System.Int32,System.Int16)">
            <summary>
            Writes the specified message string, event ID, and category as an Error
            entry in the Event Log.
            </summary>
            <param name="msg">The message string.</param>
            <param name="eventId">The application specific identifier for the event.</param>
            <param name="category">The application specific category associated with the message.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.StopUsingCurrentConnection">
            
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.ConnectUsingCopyData">
            <summary>
            Override the CodeSiteManager's default connection by connecting to
            the local CodeSite Dispatcher using wm_CopyData.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.ConnectUsingTcp(System.String,System.Int32)">
            <summary>
            Override the CodeSiteManager's default connection by connecting to
            a local or remote CodeSite Dispatcher using TCP.
            </summary>
            <param name="host">The host name or IP address of remote computer running CodeSite Dispatcher.</param>
            <param name="port">The port number being monitored by CodeSite Dispatcher for TCP messages.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.ConnectUsingTcp(System.String)">
            <summary>
            Override the CodeSiteManager's default connection by connecting to
            a local or remote CodeSite Dispatcher using TCP. (The default TCP Port 
            for the CodeSite Dispatcher is used.)
            </summary>
            <param name="host">The host name or IP address of remote computer running CodeSite Dispatcher.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.ConnectUsingTcp">
            <summary>
            Override the CodeSiteManager's default connection by connecting to
            the local CodeSite Dispatcher using TCP. (The default TCP Port 
            for the CodeSite Dispatcher is used.)
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.UseCodeSiteManagerConnection">
            <summary>
            Removes any existing connection override and once again uses the 
            connection that is defined by the CodeSiteManager.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Installed">
            <summary>
            Determines if CodeSite Tools are installed.
            </summary>
            <returns><c>true</c>, if CodeSite Tools are installed.</returns>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.CloseDispatcher">
            <summary>
            Closes the local CodeSite Dispatcher if it is running.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.Clear">
            <summary>
            Instructs the CodeSite Viewer to clear all its messages.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteLogger.OnSending(System.Int32,System.String,System.String,System.String,System.DateTime,System.Boolean@)">
            
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteLogger.Category">
            <summary>
            Use this property to specify the string value to be used to for
            categorizing CodeSite messages generated from this 
            <see cref="T:CodeSiteLogger"/> instance.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteLogger.CategoryBackColor">
            <summary>
            Use this property to specify the background color to be used
            by the CodeSite Viewer for displaying messages generated 
            from this <see cref="T:CodeSiteLogger"/> instance.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteLogger.CategoryForeColor">
            <summary>
            Use this property to specify the font color to be used
            by the CodeSite Viewer for displaying messages generated 
            from this <see cref="T:CodeSiteLogger"/> instance.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteLogger.DateTimeFormat">
            <summary>
            Use this property to specify the datetime format to be used
            when evaluated <c>DateTime</c> values.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteLogger.Destination">
            <summary>
            Use this property to specify where messages generated by
            this <see cref="T:CodeSiteLogger"/> instance will be sent.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteLogger.Enabled">
            <summary>
            Use this property to control if this <see cref="T:CodeSiteLogger"/>
            instance actually sends CodeSite messages.
            </summary>
        </member>
        <member name="E:Raize.CodeSiteLogging.CodeSiteLogger.Sending">
            <summary>
            Occurs just before this <see cref="T:CodeSiteLogger"/> instance
            sends a message. Handle this event to preview the message information, 
            redirect the information to a custom location (e.g. database table), 
            or perform custom filtering by cancelling the sending process for 
            select messages.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteObject">
            <summary>
            The CodeSiteObject class is now obsolete. Please use the CodeSiteLogger
            class to capture, package, and send CodeSite logging messages.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteManager">
            <summary>
            Static class that provides properties and methods that are shared across
            all <see cref="T:Raize.CodeSiteLogging.CodeSiteLogger"/> instances. 
            </summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteManager.DefaultHost">
            <summary>
            Represents the default host name for TCP/UDP transport.
            </summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteManager.DefaultTcpPort">
            <summary>
            Represents the default port used by CodeSite for TCP transport.
            </summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteManager.DefaultUdpPort">
            <summary>
            Represents the default port used by CodeSite for UDP transport.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteManager.GetTimeStamp">
            <summary>
            Returns the current date/time utilizing high-performance timing.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteManager.GetCurrentThreadName">
            <summary>
            Returns the name of the current thread.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteManager.ConnectUsingCopyData">
            <summary>
            Connect to the local CodeSite Dispatcher using wm_CopyData. 
            This is the default connection mechanism.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteManager.ConnectUsingTcp(System.String,System.Int32)">
            <summary>
            Connect to a local or remote CodeSite Dispatcher using TCP.
            </summary>
            <param name="host">The host name or IP address of remote computer running CodeSite Dispatcher.</param>
            <param name="port">The port number being monitored by CodeSite Dispatcher for TCP messages.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteManager.ConnectUsingTcp(System.String)">
            <summary>
            Connect to a local or remote CodeSite Dispatcher using TCP. (The default
            TCP Port for the CodeSite Dispatcher is used.)
            </summary>
            <param name="host">The host name or IP address of remote computer running CodeSite Dispatcher.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteManager.ConnectUsingTcp">
            <summary>
            Connect to the local CodeSite Dispatcher using TCP. (The default TCP port for 
            the CodeSite Dispatcher is used.)
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteManager.AppName">
            <summary>
            Use this property to specify a name to be used to identify the 
            application. This property is included with each CodeSite message
            generated. Defaults to current application name.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteManager.ComputerName">
            <summary>
            ReadOnly property that returns the name of the current computer.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteManager.DefaultDestination">
            <summary>
            Use this property to specify the default CodeSiteDestination to use for
            CodeSiteLogger instances that do not specify their own destination.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteManager.Destinations">
            <summary>
            Use this property to access the different destinations that 
            have been specified in the application's configuration file.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteManager.Enabled">
            <summary>
            Use this property to prevent *all* CodeSiteLogger instances from 
            sending messages. The Enabled property of individual CodeSiteLogger
            instances are unaffected by the CodeSiteManager.Enabled property.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteManager.EncodeNonvisibleCharacters">
            <summary>
            Use this property to instruct *all* CodeSiteLogger instances to
            encode nonvisible characters that appear in message strings. Setting
            this property to true is useful when strings contain embedded tabs,
            carriage returns, and newlines.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteManager.ProcessID">
            <summary>
            ReadOnly property that returns the current process ID.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteManager.TimeBias">
            <summary>
            ReadOnly property that returns the time zone offset from GMT.
            </summary>
        </member>
        <member name="P:Raize.CodeSiteLogging.CodeSiteManager.TraceListenerEnabled">
            <summary>
            Use this property to automatically have all Trace output also get routed
            to CodeSite.
            </summary>
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteMessage">
            <summary>
            Instances of this class are used to hold the details for
            each CodeSite message.
            </summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.MsgType">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.DispatchID">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.MsgText">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.Details">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.TimeStamp">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.TimeBias">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.ProcessID">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.ThreadName">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.AppName">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.ComputerName">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.TypeName">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.Category">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.CategoryColor">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMessage.CategoryFontColor">
            
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteMsgData">
            <summary>
            Instances of this class are used to pass message information to the 
            SendMsg event handler. It does not contain DispatchID nor TimeBias as in
            CodeSiteMessage. Also the color properties are of type Color instead of
            int and have names that match the CodeSiteLogger properties.
            </summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgData.MsgType">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgData.MsgText">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgData.Details">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgData.TimeStamp">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgData.ProcessID">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgData.ThreadName">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgData.AppName">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgData.ComputerName">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgData.TypeName">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgData.Category">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgData.CategoryBackColor">
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgData.CategoryForeColor">
            
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteMsgType">
            <summary>
            Use CodeSiteMsgType to indentify the type of content represented by
            the CodeSite logging message.
            </summary>
            
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.First">
            <summary>Internal - Do not use.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Info">
            <summary>Informational message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Warning">
            <summary>Warning message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Error">
            <summary>Error message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.CheckPoint">
            <summary>CheckPoint counter message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Object">
            <summary>Object properties data.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.StringList">
            <summary>String list message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Note">
            <summary>Note message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.EnterMethod">
            <summary>EnterMethod message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.ExitMethod">
            <summary>ExitMethod message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Separator">
            <summary>Internal - Use AddSeparator method instead.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.InactiveSeparator">
            <summary>(Internal - Do not use.)</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Clear">
            <summary>(Internal - Do not use.)</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.ScratchPad">
            <summary>(Internal - Do not use.)</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Bitmap">
            <summary>Bitmap data.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.TextFile">
            <summary>Text file contents.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Window">
            <summary>Window handle details.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Memory">
            <summary>Memory block.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.MemoryStatus">
            <summary>Memory statistics.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.CustomText">
            <summary>Custom text.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.CustomProperties">
            <summary>Custom property values.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Reminder">
            <summary>Reminder message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Level1">
            <summary>Level 1 - Red message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Level2">
            <summary>Level 2 - Orange message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Level3">
            <summary>Level 3 - Yellow message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Level4">
            <summary>Level 4 - Green message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Level5">
            <summary>Level 5 - Blue message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Level6">
            <summary>Level 6 - Indigo message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Level7">
            <summary>Level 7 - Violet message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Red">
            <summary>Red - Level 1 message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Orange">
            <summary>Orange - Level 2 message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Yellow">
            <summary>Yellow - Level 3 message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Green">
            <summary>Green - Level 4 message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Blue">
            <summary>Blue - Level 5 message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Indigo">
            <summary>Indigo - Level 6 message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Violet">
            <summary>Violet - Level 7 message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Color">
            <summary>Color value message.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Registry">
            <summary>Registry branch details.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.SystemInfo">
            <summary>System information.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.VersionInfo">
            <summary>Version information.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.XmlData">
            <summary>XML Data.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.StackTrace">
            <summary>Stack trace information.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Exception">
            <summary>Exception details.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.CustomTable">
            <summary>Custom table data.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.ResetSeparator">
            <summary>Internal - Do not use.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.AppStartSeparator">
            <summary>Internal - Do not use.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Collection">
            <summary>Collection item details.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.CollapsedMethod">
            <summary>Internal - Do not use.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.ExitMethodCollapse">
            <summary>(Internal - Do not use.)</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.CustomHierarchy">
            <summary>Custom hierarchy data.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.DispatcherBase">
            <summary>Internal - Do not use.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.RegisterDispatchID">
            <summary>Internal - Do not use.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.UnregisterDispatchID">
            <summary>Internal - Do not use.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Custom">
            <summary>Base value for defining custom inspectors.</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Reserved">
            <summary>Reserved + 1-900 : reserved for Raize Software use</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.User">
            <summary>User + 1-32,000 : used for "internal" non-public custom message types</summary>
        </member>
        <member name="F:Raize.CodeSiteLogging.CodeSiteMsgType.Public">
            <summary>Public + 1-? : used for "external" public custom messages types</summary>                  
        </member>
        <member name="T:Raize.CodeSiteLogging.CodeSiteTraceListener">
            <summary>
            Custom TraceListener class that is used to direct Trace output
            to CodeSite.
            </summary>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTraceListener.Fail(System.String)">
            <summary>
            Redirects a failure message to CodeSite.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTraceListener.Fail(System.String,System.String)">
            <summary>
            Redirects a failure message with category to CodeSite.
            </summary>
            <param name="msg">The message string.</param>
            <param name="category">The category.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTraceListener.Write(System.String)">
            <summary>
            Redirects tracing text message to CodeSite.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTraceListener.Write(System.Object)">
            <summary>
            Evaluates specified <c>object</c> and redirects text representation
            to CodeSite.
            </summary>
            <param name="obj">The object instance.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTraceListener.Write(System.String,System.String)">
            <summary>
            Redirects tracing text message with category to CodeSite.
            </summary>
            <param name="msg">The message string.</param>
            <param name="category">The category.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTraceListener.Write(System.Object,System.String)">
            <summary>
            Evaluates specified <c>object</c> and redirects text representation
            and category to CodeSite.
            </summary>
            <param name="obj">The object instance.</param>
            <param name="category">The category.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTraceListener.WriteLine(System.String)">
            <summary>
            Redirects tracing text message to CodeSite.
            </summary>
            <param name="msg">The message string.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTraceListener.WriteLine(System.Object)">
            <summary>
            Evaluates specified <c>object</c> and redirects text representation
            to CodeSite.
            </summary>
            <param name="obj">The object instance.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTraceListener.WriteLine(System.String,System.String)">
            <summary>
            Redirects tracing text message with category to CodeSite.
            </summary>
            <param name="msg">The message string.</param>
            <param name="category">The category.</param>
        </member>
        <member name="M:Raize.CodeSiteLogging.CodeSiteTraceListener.WriteLine(System.Object,System.String)">
            <summary>
            Evaluates specified <c>object</c> and redirects text representation
            and category to CodeSite.
            </summary>
            <param name="obj">The object instance.</param>
            <param name="category">The category.</param>
        </member>
    </members>
</doc>
